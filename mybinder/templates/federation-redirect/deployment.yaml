{{- if .Values.federationRedirect.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: federation-redirect
  labels:
    app: federation-redirect
    heritage: {{ .Release.Service }}
    release: {{ .Release.Name }}
spec:
  replicas: 2
  selector:
    matchLabels:
      app: federation-redirect
      release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: federation-redirect
        release: {{ .Release.Name }}
      annotations:
        checksum/configmap: {{ include (print $.Template.BasePath "/federation-redirect/configmap.yaml") . | sha256sum }}
        prometheus.io/scrape: "true"
        prometheus.io/port: "8080"
    spec:
      nodeSelector: {{ .Values.federationRedirect.nodeSelector | toJson }}
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - federation-redirect
              topologyKey: "kubernetes.io/hostname"
      volumes:
      - name: config
        configMap:
          name: federation-redirect
      automountServiceAccountToken: false

      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
      {{- . | toYaml | nindent 8 }}
      {{- end }}

      containers:
      - name: federation-redirect
        image: {{ .Values.federationRedirect.image.name }}:{{ .Values.federationRedirect.image.tag }}
        volumeMounts:
          - name: config
            mountPath: /etc/federation-redirect
            readOnly: true
        {{- with .Values.federationRedirect.resources }}
        resources:
          {{- . | toYaml | nindent 10 }}
        {{- end }}
      tolerations:
      - key: "node.kubernetes.io/unschedulable"
        operator: "Exists"
        effect: "NoExecute"
        tolerationSeconds: 30

{{- end }}
